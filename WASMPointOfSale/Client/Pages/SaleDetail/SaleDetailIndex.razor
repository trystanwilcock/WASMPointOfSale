@page "/sale/{Id:int}"
@attribute [Authorize]
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>Sale Details</PageTitle>

<h1>Sale Details</h1>

@if (sale == null)
{
    <Loader />
}
else
{
    <SaleDetail SaleDetailViewModel="sale"
            OnAddPayment="HandleAddPayment" />

    <p class="mt-3">
        <button @onclick="Back" class="btn btn-secondary">Back</button>
    </p>
}

@code {
    [Parameter] public int Id { get; set; }

    private SaleDetailViewModel? sale;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await Get();
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

    private async Task HandleAddPayment(AddPaymentDTO addPaymentDTO)
    {
        addPaymentDTO.SaleId = Id;
        await Http.PostAsJsonAsync<AddPaymentDTO>("api/sale/addpayment", addPaymentDTO);
        await Get();
    }

    private async Task Get() =>
        sale = await Http.GetFromJsonAsync<SaleDetailViewModel>($"api/sale/details/{Id}");

    private void Back() =>
        NavigationManager.NavigateTo("sales");
}